#!/bin/sh

if [ "$(basename $0)" = "tch-gui-unhide-xtra.wlassoclist" -o -z "$FW_BASE" ]; then
  echo "ERROR: This script must NOT be executed!"
  echo "       Place it in the same directory as tch-gui-unhide and it will"
  echo "       be applied automatically when you run tch-gui-unhide."
  exit
fi

# The tch-gui-unhide-xtra scripts should output a single line to indicate success or failure
# as the calling script has left a hanging echo -n. Include a leading space for clarity.

if [ -z "$XTRAS_REMOVE" ]; then
  echo " Adding wlassoclist Access Point support..."
  cat <<"MAP" > /usr/share/transformer/mappings/rpc/gui.wlassoc.map
local json = require('dkjson')
local popen = io.popen

local ifnames = {}

local link = popen("ip -o link show up | grep -o 'wl[^:]*'","r")
if link then
  for ifname in link:lines() do
    ifnames[ifname] = ""
  end
  link:close()
end

for ifname in pairs(ifnames) do
  local status = popen("wl -i "..ifname.." status | grep -o '[0-9.]*GHz'","r")
  if status then
    ifnames[ifname] = status:read("*l")
    status:close()
  end
end

local WLASSOC_ = {
  objectType = {
    name = 'rpc.gui.wlassoc.',
    access = 'readOnly',
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      list = {
        access = "readOnly",
        type = "string",
      },
    }
  }
}

WLASSOC_.get = {
  list = function()
    local data = {}
    for ifname,radio in pairs(ifnames) do
      if radio ~= "" then
        local assoclist = popen("wl -i "..ifname.." assoclist | cut -d' ' -f2")
        if assoclist then
          for l in assoclist:lines() do
            data[#data+1] = { mac = string.lower(l), radio = radio }
          end
          assoclist:close()
        end
      end
    end
    return json.encode(data)
  end
}

register(WLASSOC_)
MAP
  chmod 644 /usr/share/transformer/mappings/rpc/gui.wlassoc.map
  SRV_transformer=$(( $SRV_transformer + 1 ))
  cat <<"CONF" > /etc/nginx/wlassoclist.conf
    server {
        listen       59595;
        server_name  localhost;
        location = / {
          add_header Cache-Control "no-store";
          content_by_lua '
            local wlassoc = { list = "rpc.gui.wlassoc.list" }
            require("web.content_helper").getExactContent(wlassoc)
            ngx.say(string.untaint(wlassoc.list) or "[]");
          ';
        }
    }
CONF
  chmod 644 /etc/nginx/wlassoclist.conf
  grep -q 'wlassoclist.conf' /etc/nginx/nginx.conf || sed -e '/include[[:blank:]]*mime.types;/a\    include /etc/nginx/wlassoclist.conf;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 2 ))
else
  echo " Removing wlassoclist Access Point support..."
  sed -e '/wlassoclist.conf/d' -i /etc/nginx/nginx.conf
  rm -f /etc/nginx/wlassoclist.conf /usr/share/transformer/mappings/rpc/gui.wlassoc.map
fi