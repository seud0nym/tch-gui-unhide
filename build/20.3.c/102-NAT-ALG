echo -e "[$SCRIPT]: Add description to firewall helpers mapping"
sed -e 's/\("proto",\)$/\1 "description",/' -i /usr/share/transformer/mappings/uci/firewall_helpers.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo -e "[$SCRIPT]: Check firewall helpers module availability"
for m in $(exec_uci show firewall_helpers | grep '\.module=')
do
  module=$(echo $m | cut -d"'" -f2)
  lsmod | grep -q "^$module "
  if [ $? -eq 0 ]; then
    path="$(echo $m | cut -d. -f1-2)"
    name="$(uci -q get ${path}.name)"
    if [ -n "$name" ]; then
      sed -e "/local available/a\  available['$name'] = true" -i /www/cards/092_natalghelper.lp
      sed -e "/local available/a\available['$name'] = true" -i /www/docroot/modals/nat-alg-helper-modal.lp
    fi
  fi
done

echo -e "[$SCRIPT]: Fix any incorrectly configured helpers"
LAN_ZONE=$(exec_uci show firewall | grep @zone | grep -m 1 "name='lan'" | cut -d. -f1-2)
WAN_ZONE=$(exec_uci show firewall | grep @zone | grep -m 1 "wan='1'" | cut -d. -f1-2)
LAN_HELP=$(uci -qd"$IFS" get $LAN_ZONE.helper | sort | xargs)
WAN_HELP=$(uci -qd"$IFS" get $WAN_ZONE.helper | sort | xargs)
if [ "$LAN_HELP" != "$WAN_HELP" ]; then
  if [ -z "$WAN_HELP" ]; then
    if [ -n "$LAN_HELP" ]; then
      exec_uci -q delete $WAN_ZONE.helper
      exec_uci -q delete $LAN_ZONE.helper
    fi
  else
    exec_uci -q delete $LAN_ZONE.helper
    for h in $WAN_HELP
    do
      exec_uci add_list $LAN_ZONE.helper="$h"
    done
  fi
  exec_uci commit firewall
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo -e "[$SCRIPT]: Fix helper path in Port Forwarding modal"
sed -e 's/uci.firewall.helper/uci.firewall_helpers.helper/' -i /www/docroot/modals/firewall-port-forwarding-modal.lp
