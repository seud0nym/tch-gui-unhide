#!/bin/sh

cd $(dirname $0)

if [ "x$1" = "x-p" ]; then
  VERSION=$(date +%Y.%m.%d)
  PR_TEXT="Pre-Release"
  PR_OPTN="-p"
else
  VERSION="$(head -n 1 ../VERSION.txt)"
  PR_TEXT="Release"
  PR_OPTN=""
fi

if [ "$(date +%Y.%m.%d)" != "$VERSION" ]; then
  echo "ERROR: First line of VERSION.txt does not match expected VERSION number!!!"
  echo "       Use the -p option to create a pre-release build."
  echo
  exit 1
else
  echo Building $PR_TEXT $VERSION
fi

if echo "$1" | grep -q '^@[0-2][0-9]:[0-5][0-9]$'; then
  VERSION=$VERSION$1
fi

./build $PR_OPTN -v$VERSION

echo Fixing utilities line endings...
DOS=$(find ../utilities/ -type f | xargs file | grep CRLF | cut -d: -f1 | xargs)
if [ -n "$DOS" ]; then
  for f in $DOS; do
    dos2unix $f
  done
  find ../utilities/ -name 'd2utmp*' -exec rm -f {} \;
fi

echo Cleaning up..
rm ../*.tar.gz *.tar.gz 2>/dev/null

echo Getting utilities list..
new=$(git status --short | grep '^??' | cut -d' ' -f2)
utilities="$(find ../utilities/ -maxdepth 1 -type f ! -name README.md | sort | sed -e 's,^\.\./,,')"
for new in $(git status --short | awk '/^\?\?/{sub("^../","",$2);print "\\b" $2 "\\b";}0'); do
  utilities=$(echo $utilities | sed -e "s,$new,,")
done
for major in $(ls -d */ | grep -E '^[1-2]' | cut -d/ -f1); do
  case "$major" in
    17.2)    exclude="dumaos unflock";;
    18.1.c)  exclude="transformer-cli";;
    20.3.c)  exclude="transformer-cli";;
    2[01].4) exclude="set-optimal-bank-plan transformer-cli unpack-rbi";;
    *)       exclude=""
  esac
  utils="$utilities"
  for utility in $exclude; do
    utils=$(echo $utils | sed -e "s,\butilities/$utility\b,,")
  done
  echo "Writing ${major}.tar.gz ..."
  tar --xform='s,utilities/,,' --owner=root --group=root --mode=755 -czf "../${major}.tar.gz" -C .. tch-gui-unhide tch-gui-unhide-$major tch-gui-unhide-cards $utils
done

echo Done.
