echo -e "[$SCRIPT]: Checking firewall configuration for Intrusion Protection"
if [ ! -e /etc/config/intrusion_protect ]; then
  [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]:  ==> Creating /etc/config/intrusion_protect"
  cat <<IP_CONFIG > /etc/config/intrusion_protect
config intrusion_protect 'config'
        option enabled '0'

config whitelist 'WhiteList'
        option enabled '0'

config blacklist 'BlackList'
        option enabled '0'
        option logging '0'

config blocklist 'ETfwip'
        option enabled '1'
        option url 'http://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt'
        option description 'Emerging Threats lists offensive IPs such as botnet command servers.'
        option logging '0'

config blocklist 'ETcompromised'
        option enabled '0'
        option url 'https://rules.emergingthreats.net/blockrules/compromised-ips.txt'
        option description 'This is a list of hosts from Emerging Threats that are known to be compromised.'
        option logging '0'

config blocklist 'CIArmy'
        option enabled '0'
        option url 'http://cinsscore.com/list/ci-badguys.txt'
        option description 'The CINS Army list is a subset of the CINS Active Threat Intelligence ruleset, and consists of IP addresses that meet one of two basic criteria: 1) The IPs recent Rogue Packet score factor is very poor, or 2) The IP has tripped a designated number of "trusted" alerts across a given number of our Sentinels deployed around the world.'
        option logging '0'

config blocklist 'BlockListDE'
        option enabled '0'
        option url 'https://www.blocklist.de/downloads/export-ips_all.txt'
        option description 'blocklist.de collects reports from fail2ban probes, listing password brute-forces, scanners and other offenders.'
        option logging '0'

IP_CONFIG
  chmod 644 /etc/config/intrusion_protect
fi
if [ "$(uci -q get firewall.intrusion_protect)" != "include" ]; then
  [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]:  ==> Creating configuration firewall.intrusion_protect"
  exec_uci set firewall.intrusion_protect='include'
  exec_uci set firewall.intrusion_protect.type='script'
  exec_uci set firewall.intrusion_protect.family='IPv4'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
exec_uci set firewall.intrusion_protect.path='/usr/share/tch-gui-unhide/intrusion-protection'
exec_uci set firewall.intrusion_protect.reload='1'
exec_uci set firewall.intrusion_protect.enabled='1'
SRV_firewall=$(( $SRV_firewall + 1 ))
grep -qv "/usr/share/intrusion-protection/firewall.sh" /etc/crontabs/root && sed -e 's|/usr/share/intrusion-protection/firewall.sh|/usr/share/tch-gui-unhide/intrusion-protection|' -i /etc/crontabs/root
if [ $(grep -q intrusion-protection /etc/crontabs/root | wc -l) -eq 0 ]; then
  mm=$(awk 'BEGIN{srand();print int(rand()*59);}')
  hh=$(awk 'BEGIN{srand();print int(rand()*2)+3;}')
  [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]:  ==> Adding intrusion-protection cron task every day at $hh:$mm"
  echo "$mm $hh * * * /usr/share/tch-gui-unhide/intrusion-protection update" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi
chmod +x /usr/share/tch-gui-unhide/intrusion-protection

[ $SRV_firewall -gt 0 ] && exec_uci commit firewall
