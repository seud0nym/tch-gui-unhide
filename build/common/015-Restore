if [ $RESTORE = y ]; then
  XTRAS_REMOVE=Y
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null); do
    chmod +x $s
    echo -en "[$SCRIPT]: Removing $(echo $s | cut -d. -f2-) extra feature:"
    . ./$s
  done

  restore_from_rom V

  for f in /etc/config/tch_gui_unhide /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme /etc/hotplug.d/iface/10-bqos /etc/init.d/bqos /usr/sbin/bqos /etc/hotplug.d/iface/60-add-IPv6-DNS-intercept-exceptions /etc/hotplug.d/iface/70-WAN-LEDs /etc/init.d/static-wan-routes-monitor;do
    if [ -f "$f" ]; then
      if [ "$(dirname $f)" = "/etc/init.d" ]; then
        echo -e "[$SCRIPT]: Disabling and stopping $f"
        $f disable
        $f stop
      fi
      echo -e "[$SCRIPT]: Removing $f"
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra;do
    if [ -d "$d" ]; then
      echo -e "[$SCRIPT]: Removing empty directory $d"
      rmdir "$d"
    fi
  done
  for s in $(exec_uci show web | grep normally_hidden | cut -d. -f2); do
    echo -e "[$SCRIPT]: Removing config entry web.$s"
    exec_uci -q delete web.$s
    exec_uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(exec_uci show web | grep '=card' | cut -d= -f1); do
    echo -e "[$SCRIPT]: Removing config entry $s"
    exec_uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(exec_uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u); do
    TARGET=$(uci -q get web.$s.target)
    if [ -n "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo -e "[$SCRIPT]: Removing config entry web.$s"
      exec_uci -q delete web.$s
      exec_uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ -n "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo -e "[$SCRIPT]: Resetting admin role on config entry web.$s.roles"
        exec_uci -q delete web.$s.roles
        exec_uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  exec_uci commit web
  echo -e "[$SCRIPT]: Restoring /etc/nginx/nginx.conf"
  sed -e '/lua_shared_dict *TGU_/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  if grep -qF 'home.lp' /rom/etc/nginx/nginx.conf && grep -qF 'gateway.lp' /etc/nginx/nginx.conf; then
    sed -e "s/\bgateway\.lp\b/home.lp/" -i /etc/nginx/nginx.conf
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  unlock normally
fi
