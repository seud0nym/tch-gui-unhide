echo -e "[$SCRIPT]: Fix missing values on rpc.network.firewall.userrule."
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo -e "[$SCRIPT]: Fix missing values on rpc.network.firewall.userrule_v6."
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo -e "[$SCRIPT]: Add missing transformer mappings for firewall"
sed \
  -e 's/"type", "family"/"type", "path", "family"/' \
  -e 's/"hashsize", "timeout",$/& "match",/' \
  -e 's/"wan",$/& "_key"/' \
  -e 's/"dest_port",$/& "_key"/' \
  -e 's/^ *"enabled", "name", "src", "dest", "family",$/& "_key"/' \
  -i /usr/share/transformer/mappings/uci/firewall.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo -e "[$SCRIPT]: Add transformer mapping for uci.firewall.nat."
sed -n '/-- uci.firewall.redirect/,/MultiMap/p' /usr/share/transformer/mappings/uci/firewall.map | sed -e 's/redirect/nat/g' >> /usr/share/transformer/mappings/uci/firewall.map
SRV_transformer=$(( $SRV_transformer + 1 ))

# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)"
if [ -n "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: Fixing configuration firewall.@defaults[0].synflood_rate"
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')"
    exec_uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ -n "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: Deleting configuration firewall.@defaults[0].tcp_syncookies"
  exec_uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo -e "[$SCRIPT]: Only start/restart/reload firewall if service enabled"
sed \
  -e 's|fw3 [^f]|/etc/init.d/firewall enabled \&\& &|' \
  -i /etc/init.d/firewall

if [ "$(uci -q get firewall.fix_guest_access_to_port_forwards)" != "include" ]; then
  [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: Creating configuration firewall.fix_guest_access_to_port_forwards"
  exec_uci set firewall.fix_guest_access_to_port_forwards='include'
  exec_uci set firewall.fix_guest_access_to_port_forwards.type='script'
  exec_uci set firewall.fix_guest_access_to_port_forwards.reload='1'
  exec_uci set firewall.fix_guest_access_to_port_forwards.enabled='1'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
exec_uci set firewall.fix_guest_access_to_port_forwards.path='/usr/share/tch-gui-unhide/fix-guest-access-to-port-forwards'

[ $SRV_firewall -gt 0 ] && exec_uci commit firewall

if [ -e /www/docroot/modals/dosprotect-modal.lp ]; then
  echo -e "[$SCRIPT]: Fixing DoS Protection headings"
  sed \
    -e 's/DoS Protect Option/Firewall/' \
    -e 's/Settings/DoS Protection/' \
    -i /www/docroot/modals/dosprotect-modal.lp
fi
