restore_from_rom() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    echo -e "[$SCRIPT]: Removing /usr/share/transformer/mappings/iperf.map"
    rm /usr/share/transformer/mappings/iperf.map
  fi

  local overlay d f s t
  [ -z "$(which bootmgr)" ] && overlay="/overlay/$(cat /proc/banktable/booted 2>/dev/null)" || overlay="/overlay/bank_$(bootmgr partition booted)"
  
  echo -e "[$SCRIPT]: Removing any previous installation..."
  local directories=""
  while read -r filepath; do
    t="/$filepath"
    s="${RESTORE_BASE}${t}"
    d="$(dirname $t)"
    f="$(basename $t)"
    if [ -f "$s" ]; then
      if [ "$s" = "/rom${t}" -a -f "${overlay}${t}" ]; then
        [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Restoring file $t by removing from $overlay${NC}"
        rm "${overlay}${t}"
        mount -o remount /
      elif ! cmp -s "$s" "$t"; then
        [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Restoring file $t${NC}"
        mkdir -p "$(dirname $t)"
        cp -f -p "$s" "$t"
      fi
    elif [ -f "$t" ]; then
      if [ $d = "/etc/init.d" ]; then
        [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Stopping and disabling $t${NC}"
        $t stop 1>/dev/null 2>&1
        $t disable 1>/dev/null 2>&1
      elif echo "$d" | grep -q '^/usr/share/transformer'; then
        SRV_transformer=$(( $SRV_transformer + 1 ))
      fi
      [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Removing file $t${NC}"
      rm -f "$t"
      [ -z "$directories" ] || directories="${directories}${IFS}"
      directories="${directories}${d}"
      if grep -q "\b${f}\b" /etc/crontabs/root; then
        [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Removing $f scheduled task${NC}"
        sed -e "/\b${f}\b/d" -i /etc/crontabs/root
        SRV_cron=$(( $SRV_cron + 1 ))
      fi
    fi
  done <<EOF
EOF

  for d in $(echo "$directories" | sort -u); do
    if [ ! -d ${RESTORE_BASE}${d} -a $(ls $d | wc -l) = 0 ]; then
      [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} Removing empty directory $d${NC}"
      rmdir "$d"
    else
      [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} Restoring directory $d"
      for s in $(find ${RESTORE_BASE}${d} -type f 2>/dev/null | grep -vE "^$RESTORE_BASE/www/docroot/help"); do
        t=${s#$RESTORE_BASE}
        if [ "$s" = "/rom${t}" -a -f "${overlay}${t}" ]; then
          [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Restoring file $t by removing from $overlay${NC}"
          rm "${overlay}${t}"
          mount -o remount /
        elif ! cmp -s "$s" "$t"; then
          [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Restoring file $t${NC}"
          mkdir -p "$(dirname $t)"
          cp -f -p "$s" "$t"
          echo "$d" | grep -q '^/usr/share/transformer' && SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      done
      for f in $(find $d -type f ! -path '/www/docroot/help*' 2>/dev/null);do
        if [ ! -f "${RESTORE_BASE}${f}" -a -f "$f" ]; then
          [ "$1" = "V" ] && echo -e "[$SCRIPT]: ${GREY} -> Removing file $f${NC}"
          rm -f "$f"
          echo "$d" | grep -q '^/usr/share/transformer' && SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      done
    fi
  done
}
