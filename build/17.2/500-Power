PWR_OPTIONS="$(pwrctl 2>&1 | grep -oe '--[^[:blank:]]*' | sort -u)"
check_pwr_setting() {
  local section="$1"
  local option="$2"
  local text="$3"
  if echo $PWR_OPTIONS | grep -qe "--$option\b"; then
    if [ -z "$(uci -q get power.$section.$option)" ]; then
      pwrctl show | grep "$text" | grep -q DISABLED
      value=$?
      [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: - power.$section.$option=$value"
      exec_uci set power.$section.$option="$value"
      SRV_power=$(( $SRV_power + 1 ))
    fi
  else
    local field="$option"
    [ "$section" = "cpu" -a "$option" = "wait" ] && field="cpuwait"
    [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: - pwrctl config --$option is not valid: removing from GUI"
    sed -e "/uci\.power\.$section\.$option/d" -e "/^if content\.$field ==/,/^end/d" -e "/createSimpleLight(content\.$field/d" -i /www/cards/020_eco.lp
    sed -e "/$option/d" -i /www/docroot/modals/eco-modal.lp
    sed -e "s/,\"$option\"//" -e "s/\"$option\",//" -i /usr/share/transformer/mappings/uci/power.map
  fi
}

echo -e "[$SCRIPT]: Checking power saving settings..."
if [ -z "$(uci -q get power.cpu)" ];then
  exec_uci set power.cpu='cpu'
fi

if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
  case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
    1) exec_uci set power.cpu.cpuspeed="1";;
    2) exec_uci set power.cpu.cpuspeed="2";;
    4) exec_uci set power.cpu.cpuspeed="4";;
    5) exec_uci set power.cpu.cpuspeed="8";;
    *) exec_uci set power.cpu.cpuspeed="256";;
  esac
  SRV_power=$(( $SRV_power + 1 ))
fi
check_pwr_setting "cpu" "wait" "CPU Wait"
check_pwr_setting "ethernet" "ethapd" "Auto Power"
check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
check_pwr_setting "ethernet" "dgm" "Deep Green Mode"

[ $SRV_power -gt 0 ] && exec_uci commit power
