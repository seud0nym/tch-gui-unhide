echo -e "[$SCRIPT]: Create transformer mapping for qos_tch"
sed \
  -e 's/qos/&_tch/g' \
  /usr/share/transformer/mappings/uci/qos.map > /usr/share/transformer/mappings/uci/qos_tch.map
sed \
  -e 's/isEnabled("qos")/isEnabled("qos-tch")/' \
  -e 's/setServiceState("qos",value)/& and setServiceState("qos-tch",value)/' \
  -i /usr/share/transformer/mappings/rpc/gui.qos.map
SRV_transformer=$(( $SRV_transformer + 2 ))

echo -e "[$SCRIPT]: Pointing QoS GUI at qos_tch transformer mapping"
for f in modals/qos-device-modal.lp modals/qos-label-modal.lp modals/qos-classify-modal.lp modals/qos-queue-modal.lp modals/qos-reclassify-modal.lp modals/qos-swshaper-modal.lp ajax/qos-swshaper-status.lua; do
  if [ -f /www/docroot/$f ]; then
    [ -n "$VERBOSE" ] && echo -e "[$SCRIPT]: - Fixing /www/docroot/$f"
    sed -e 's/uci%*\.qos/&_tch/g' -i /www/docroot/$f
  fi
done

echo -e "[$SCRIPT]: Adding QoS System Classification Rules"
sed \
  -e '/ui_helper.createHeader/i\
local interfaces = {}\
for _,iface in ipairs(proxy.getPN("Device.IP.Interface.",true)) do\
  local name = proxy.get(iface.path.."Name")\
  if name then\
    interfaces[#interfaces+1] = { iface.path:sub(1,-2), name[1].value}\
  end\
end\
\
local classification_columns = {\
  {\
    header = T"Order",\
    name = "Order",\
    param = "Order",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Traffic Class",\
    name = "TrafficClass",\
    param = "TrafficClass",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Srce IP",\
    name = "SourceIP",\
    param = "SourceIP",\
    type = "text",\
    attr = { input = { class = "span2" } },\
  },\
  {\
    header = T"Srce Port",\
    name = "SourcePort",\
    param = "SourcePort",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Dest IP",\
    name = "DestIP",\
    param = "DestIP",\
    type = "text",\
    attr = { input = { class = "span2" } },\
  },\
  {\
    header = T"Dest Port",\
    name = "DestPort",\
    param = "DestPort",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Protocol",\
    name = "Protocol",\
    param = "Protocol",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"DSCP Check",\
    name = "DSCPCheck",\
    param = "DSCPCheck",\
    type = "text",\
    attr = { input = { class = "span2" } },\
  },\
  {\
    header = T"DSCP Mark",\
    name = "DSCPMark",\
    param = "DSCPMark",\
    type = "text",\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"DSCP Exclude",\
    name = "DSCPExclude",\
    param = "DSCPExclude",\
    type = "switch",\
    attr = { switch = { ["data-placement"] = "center" } },\
  },\
  {\
    header = T"All Interfaces",\
    name = "AllInterfaces",\
    param = "AllInterfaces",\
    type = "switch",\
    attr = { switch = { ["data-placement"] = "center" } },\
  },\
  {\
    header = T"Interface",\
    name = "Interface",\
    param = "Interface",\
    type = "select",\
    values = interfaces,\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Dest Interface",\
    name = "X_000E50_DestInterface",\
    param = "X_000E50_DestInterface",\
    type = "select",\
    values = interfaces,\
    attr = { input = { class = "span2"} },\
  },\
  {\
    header = T"Enabled",\
    name = "Enable",\
    param = "Enable",\
    type = "switch",\
    attr = { switch = { ["data-placement"] = "center" } },\
  },\
}\
\
local classification_options = {\
  tableid = "classification",\
  basepath = "Device.QoS.Classification.",\
  canEdit = false,\
  canAdd = false,\
  canDelete = false,\
}\
\
local classification_valid = {\
}\
\
local classification_data,classification_helpMsg = post_helper.handleTableQuery(classification_columns,classification_options,nil,nil,classification_valid)\
\
for r,row in ipairs(classification_data) do\
  for c,col in ipairs(row) do\
    if col == "-1" then\
      classification_data[r][c] = ""\
    end\
  end\
end\
' \
  -e '/ngx.print(html)/i\
    html[#html+1] = "<fieldset>"\
    html[#html+1] =	  "<legend>"..T"System Classification Rules".."</legend>"\
    html[#html+1] =   ui_helper.createTable(classification_columns,classification_data,classification_options,nil,classification_helpMsg)\
    html[#html+1] = "</fieldset>"\
' \
  -i /www/docroot/modals/qos-classify-modal.lp
